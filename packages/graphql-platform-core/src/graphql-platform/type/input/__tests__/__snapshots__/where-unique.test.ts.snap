// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WhereUniqueInput creates a valid GraphQL "WhereUniqueInput" type 1`] = `
"# Identifies exactly one \\"Article\\" node with one of these unique combinations of values:
# - _id
# - id
# - category, slug
input ArticleWhereUniqueInput {
  _id: Int
  id: ID
  category: CategoryWhereUniqueInput
  slug: String
}"
`;

exports[`WhereUniqueInput creates a valid GraphQL "WhereUniqueInput" type 2`] = `
"# Given a known \\"category\\", identifies exactly one \\"Article\\" node with one of these unique combinations of values:
# - _id
# - id
# - category (optional), slug
input ArticleWithOptionalCategoryWhereUniqueInput {
  _id: Int
  id: ID
  category: CategoryWhereUniqueInput
  slug: String
}"
`;

exports[`WhereUniqueInput creates a valid GraphQL "WhereUniqueInput" type 3`] = `
"# Given a forced \\"category\\", identifies exactly one \\"Article\\" node.
input ArticleWithForcedCategoryWhereUniqueInput {
  slug: String!
}"
`;

exports[`WhereUniqueInput creates a valid GraphQL "WhereUniqueInput" type 4`] = `
"# Identifies exactly one \\"ArticleTag\\" node with one of these unique combinations of values:
# - article, tag
# - article, order
input ArticleTagWhereUniqueInput {
  article: ArticleWhereUniqueInput!
  tag: TagWhereUniqueInput
  order: Int
}"
`;

exports[`WhereUniqueInput creates a valid GraphQL "WhereUniqueInput" type 5`] = `
"# Given a known \\"article\\", identifies exactly one \\"ArticleTag\\" node with one of these unique combinations of values:
# - article (optional), tag
# - article (optional), order
input ArticleTagWithOptionalArticleWhereUniqueInput {
  article: ArticleWhereUniqueInput
  tag: TagWhereUniqueInput
  order: Int
}"
`;

exports[`WhereUniqueInput creates a valid GraphQL "WhereUniqueInput" type 6`] = `
"# Given a forced \\"article\\", identifies exactly one \\"ArticleTag\\" node with one of these unique values:
# - tag
# - order
input ArticleTagWithForcedArticleWhereUniqueInput {
  tag: TagWhereUniqueInput
  order: Int
}"
`;

exports[`WhereUniqueInput creates a valid GraphQL "WhereUniqueInput" type 7`] = `
"# Given a known \\"tag\\", identifies exactly one \\"ArticleTag\\" node with one of these unique combinations of values:
# - article, tag (optional)
# - article, order
input ArticleTagWithOptionalTagWhereUniqueInput {
  article: ArticleWhereUniqueInput!
  tag: TagWhereUniqueInput
  order: Int
}"
`;

exports[`WhereUniqueInput creates a valid GraphQL "WhereUniqueInput" type 8`] = `
"# Given a forced \\"tag\\", identifies exactly one \\"ArticleTag\\" node.
input ArticleTagWithForcedTagWhereUniqueInput {
  article: ArticleWhereUniqueInput!
}"
`;
